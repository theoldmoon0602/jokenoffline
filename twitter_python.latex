\documentclass{jsarticle}

\usepackage[dvipdfmx]{graphicx}
\usepackage{here}

\begin{document}

\title{Pythonを使ってツイート}
\author{情報工学科 ふるつき}
\date{}

\maketitle


\part*{ぽよぽよ}
　記事一個ではちょっと短くて足りない感じ（実はノルマがあって、さっきのではちょっと短い）なので、もう一個手抜きの記事を書きます。ちなみに締め切りまで3時間を切っています。今回はちょっと締め切り過ぎてから提出しようかなーと考えていますが、レポートでこれをやってはいけません。私はやったことないのでわかりませんが、やらないが吉です。

\part*{ぽよぽよ}
　さて、この記事では、Pythonという汎用のLightweightLanguage(LL)を用いて、高専生が大好きなツイッターをするプログラムを作りたいと思います。ツイッタークライアントには数々の機能が存在することは想像がつきますが、今回はできるだけ簡単に、ツイートをするだけにしておきましょう。ツイートを行うプログラムを作ってしまえば、ツイートを取得するとか、フォローしてみるとか、そういうことを自力で実装できるようになるはずです。

\part*{Python}
　実際に手を動かす前に、少しだけ座学をやりましょう。今回使う、Pythonというプログラミング言語についてです。いきなり与えられたものをただ唯々諾々と使うよりは、その言語について少しでも知っている方が得策です。

　先程も書きましたが、Pythonは軽量な汎用の言語です。もう少し噛み砕いて言えば、「手軽に、いろんな用途で使える言語です」ということです。

　プログラミング言語には、ある目的（例えば数値計算とか、あるいはHTMLの生成とか）に特化した言語がある一方、「とりあえずどんな目的にも使えるよ」という汎用性を重視したものも存在します。汎用言語を一つ知っていれば、何かを作ろうと思い立った時に、その言語を道具の一つとして使うことができます。潰しが利くってことです。

　それから、Pythonのもうひとつの特徴である「手軽」についても少し。細かい話をするのは大変なので大雑把に。「Pythonはちょっと実行速度が遅くてストレスになったり、あるいは現実的な時間では処理が終わらなかったりしますが、実行するまでがとても簡単でいい感じです」。

\part*{前提}

　Linux系のOS上で、すでにPython3系が動作する環境が整えられているとします。3分クッキングで言う「出来上がったものをこちらにご用意しました」的な。とはいえ、pythonとpipさえ十分にあれば、Windowsでも「コマンドプロンプト」を使って同じことができるはずです。

　エディタが使えること、Pythonについての知識があること（Offlineの他の記事で紹介されているとおもいます）、Linuxのコンソールを扱えることくらいは前提です。


\part*{必要なライブラリのインストール}

　まだもう少し、手を動かせません。辛抱ください。

　いろんな人がプログラミングをやっているわけですが、AさんとBさんは同じことを行うためのプログラムを書いているかもしれません。例えばツイートするとか。そういうとき、Aさんが作ったものをBさんも使えたならば、Bさんはそのプログラムを作る手間が省けてハッピーですよね。AさんとBさんが全く同じプログラムを作るわけではなくても、ある一箇所では同じ機能が必要になるかもしれません。例えばツイートするとか。そういうときも、一部分だけでも人の書いたプログラムを流用できると良いですね。

　そんな時に使えるのがライブラリという仕組みです。あるプログラムを、いろんな人が使えるような形（つまりライブラリ）にして配布すると、他の人はそのライブラリを使用して簡単にプログラミングができます。

　ツイッターをするためのライブラリはたくさん公開されています（みんな「俺のが一番だ」っていって作るので結局ライブラリはたくさんになります）。今回は、そのうちの一つを使って楽にプログラミングをします。

　コンソールで次のようにコマンドを打ちましょう。

\begin{verbatim}
  pip install twython
\end{verbatim}

　環境によってはpipではなくてpip3という名前かもしれません。また、うまく行かない場合はsudo pip install twythonとしてみてください。兎角も、これでライブラリの導入が叶いました。

\part*{開発者登録}

　ツイッターアプリを作るときは、まずアプリの登録を行わなければなりません。そんなに難しいこともないので、とっとこ済ませてしまいましょう。まずはお好きなブラウザ(Vimとか)でhttps://apps.twitter.comにアクセスしましょう。するとこんな感じ。

  \begin{center}
    \begin{figure}[H]
      \includegraphics[width=14cm]{imgs/img1.jpg}
    \end{figure}
  \end{center}

　迷わずsign inします。するとこんな感じ。

  \begin{center}
    \begin{figure}[H]
      \includegraphics[width=14cm]{imgs/img2.jpg}
    \end{figure}
  \end{center}

　迷わずCreate New Appします。するとこんな感じ。

  \begin{center}
    \begin{figure}[H]
      \includegraphics[width=14cm]{imgs/img3.jpg}
    \end{figure}
  \end{center}

　いろいろ情報をいれます。名前は他のアプリとかぶらないものを適当に。説明は10文字以上を適当に。WebsiteはツイッターのURLとかでいいでしょう。それから、規約に同意してCreateします。

  \begin{center}
    \begin{figure}[H]
      \includegraphics[width=14cm]{imgs/img4.jpg}
    \end{figure}
  \end{center}

　そのあとで、Keys and Access Tokensというタブの下の方から、Generate HOGEしたらとりあえず準備終わりです。後でまた訪れますが、それが面倒だという方は、今のうちに、
Application SettingsのConsumer KeyとConsumer Secret、それから、Your Access TokenのAccess TokenとAccess Token Secretをメモしておきましょう。ちなみにこれらは自分以外には知られないようにすることが重要です。それぞれがマイナンバーのようなものなので。

  \begin{center}
    \begin{figure}[H]
      \includegraphics[width=14cm]{imgs/img5.jpg}
    \end{figure}
  \end{center}

\part*{プログラムの書き始め}

　とりあえず、プログラムを書き始めましょう。お好きなVimを立ち上げてください。……というのは少し厳しいので（というかVimの操作を説明するのが面倒なので）、好きなエディタを使ってください。名前はtweet.pyとでもしておきましょう。

\section*{ライブラリを使うためのimport}

　Pythonでライブラリを使うためには、pipで用意して、プログラム本体からはimportしてやる必要があります。したがって、一行目は
\begin{verbatim}
  import twython
\end{verbatim}

　となります。

\section*{必要な情報の宣言}

　先ほど見たConsumer Keyなどの四つの値を変数として定義します。これらは「文字列」として扱うので、ダブルクオーテーションで囲って"XXXX"とするか、シングルクオートで'XXXX'としてください。どちらでも違いはありません。こんな感じになります。

\begin{verbatim}
  import twython

  consumer_key = 'XXXXXXXXXXXXXXX'
  consumer_secret = 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'
  access_token = 'XXXXX-XXXXXXXXXXXXXXXXXXXXX'
  access_token_secret = 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'
\end{verbatim}

\section*{Twythonを使う}

　導入したライブラリ、Twythonを使って、Twitterと通信する部分を作ります。

\begin{verbatim}
  twitter = twython.Twython(consumer_key, consumer_secret, access_token, access_token_secret)
\end{verbatim}

　この部分は、Twythonを使わなければかなり煩雑な処理になってしまいます。ところがその部分はライブラリにお任せしてしまえるので、、私達はtwitterというインスタンス（＝変数）を作って、これを使えば良いだけなのです。

\section*{ツイートする}

　もうツイートできます。たったこれだけ。

\begin{verbatim}
  twitter.update_status(status='Hello, twitter world!');
\end{verbatim}

　このupdate\_statusというメソッドがに、statusという名前の引数を文字列で渡してやれば、その文字列がツイートされます。細かいことは抜きにして、実際に動かしてみましょう。

\section*{動かす}

　動かすときは、プログラムを保存してエディタを終了しましょう。それから、コンソールで、次のようなコマンドを打ってください。うまく行かなければ、pythonをpython3に置き換えるなどしてみてください。

\begin{verbatim}
  python tweet.py
\end{verbatim}

　何も起きずに終了するはずです。拍子抜けですね。ところが、ツイッターにアクセスしてみると、確かにツイートが行われていることが確認できます。さらに、via（＝ツイッタークライアント）が見られるクライアントでは、自分のツイッタークライアントの名前のviaが見えるはずです。

  \begin{center}
    \begin{figure}[H]
      \includegraphics[width=14cm]{imgs/img6.jpg}
    \end{figure}
  \end{center}

　今回の記事はこれだけです。お疲れ様でした。

\part*{振り返りとかまとめとか}

　今回はPython3と、PythonでTwitterをするためのライブラリ、Twythonをつかって、簡単にツイートを行うプログラムを書きました。PythonもTwyhonも優秀なので記事が短くなってちょっと困っています。どれくらい短いかというと、プログラム全部でこのくらいです。

\begin{verbatim}
import twython

consumer_key = 'XXXXXXXXXXXXXX'
consumer_secret = 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'
access_token = 'XXXXXXXXXX-XXXXXXXXXXXXXXXXXXXXXXXXXXXX'
access_token_secret = 'XXXXXXXXXXXXXXXXXXXXX'

twitter = twython.Twython(consumer_key, consumer_secret, access_token, access_token_secret)

twitter.update_status(status='Hello, twitter world!')

\end{verbatim}

　空白行を除けば、たったの7行でツイートが実現されています。これはちょっとおどろきですね。

\part*{次にやること}

　今回の記事ではツイートが簡単に行えることを示しましたが、Twythonを使えばツイッターの機能のほぼすべてを扱うことができます。もしもこの記事の内容に興味を持ったのなら、今回作成したプログラムを改造するのが良いでしょう。

　例えば、Hello, twitter world!以外の文字列をツイートできるようにしてみましょう。できれば、標準入力から読み込んでツイートできると良いですね。

　ただし、プログラムを「自分で書く」事になれば、Twythonの知識や、Twitterの知識や、Pythonの知識が必要不可欠になります。もしも困ったなら、JOKENを訪ねてきてください。すくなくともこの記事の内容に関しては解説やサポートをするつもりでいますし、他のことでも出来る限りお手伝いをしたいと考えています。

　つまり、この記事は「JOKENに入ろう」って言っています。

\end{document}
